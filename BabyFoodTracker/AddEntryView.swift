//
//  AddEntryView.swift
//  BabyFoodTracker
//
//  Created by Sophia Tang on 7/2/25.
//

// This file defines the view for adding new food entries.

import SwiftUI
import PhotosUI
import UIKit

struct AddEntryView: View {
    @ObservedObject var foodStore: FoodDataStore // Receives data store object
    @State private var selectedDate: Date = Date()
    @State private var foodInput: String = ""
    @State private var showPhotoPicker: Bool = false
    @State private var selectedPhotoItem: PhotosPickerItem? // For PhotosPicker
    @State private var photoImageData: Data? // Stores selected photo data

    var body: some View {
        NavigationView {
            Form {
                Section(header: Text("Food Information").font(.headline).foregroundColor(.pink)) {
                    DatePicker("Date and Time", selection: $selectedDate, displayedComponents: [.date, .hourAndMinute])
                        .datePickerStyle(.graphical) // Cute calendar style

                    TextField("Food Content (manual input)", text: $foodInput)
                        .autocorrectionDisabled() // Disable autocorrection

                    // Food Library Selection (Placeholder, to be generated by AI)
                    Button("Select from Food Library (To be implemented)") {
                        // TODO: Prompt AI to generate food library selection logic
                    }
                    .foregroundColor(.blue)

                    // Baby Photo (Placeholder, to be generated by AI)
                    VStack(alignment: .leading) {
                        Text("Baby Photo").font(.subheadline).foregroundColor(.gray)
                        if let photoImageData, let uiImage = UIImage(data: photoImageData) {
                            Image(uiImage: uiImage)
                                .resizable()
                                .scaledToFit()
                                .frame(height: 150)
                                .cornerRadius(10)
                        } else {
                            Image(systemName: "photo.badge.plus")
                                .resizable()
                                .scaledToFit()
                                .frame(width: 100, height: 100)
                                .foregroundColor(.gray)
                        }
                        PhotosPicker(selection: $selectedPhotoItem, matching: .images) {
                            Text(photoImageData != nil ? "Change Photo" : "Add Baby Photo")
                        }
                        .onChange(of: selectedPhotoItem) { newItem in
                            Task {
                                if let data = try? await newItem?.loadTransferable(type: Data.self) {
                                    photoImageData = data
                                }
                            }
                        }
                    }
                }

                Button("Add Entry") {
                    if !foodInput.isEmpty {
                        let newEntry = BabyFoodEntry(
                            date: selectedDate,
                            foodContent: foodInput,
                            photoData: photoImageData
                        )
                        foodStore.addEntry(newEntry)
                        // Reset form
                        foodInput = ""
                        selectedDate = Date()
                        photoImageData = nil
                        selectedPhotoItem = nil
                    }
                }
                .frame(maxWidth: .infinity)
                .padding()
                .background(Color.pink)
                .foregroundColor(.white)
                .cornerRadius(15)
            }
            .navigationTitle("Add Food Entry")
            .navigationBarTitleDisplayMode(.inline)
        }
    }
}

struct AddEntryView_Previews: PreviewProvider {
    static var previews: some View {
        AddEntryView(foodStore: FoodDataStore())
    }
}
